package sapin

import (
	"fmt"
	"testing"

	. "github.com/smartystreets/goconvey/convey"
)

func TestSapin_String(t *testing.T) {
	Convey("Testing Sapin.String()", t, func() {
		Convey("size=1", func() {
			sapin := NewSapin(1)
			So(fmt.Sprintf("\n%s", sapin.String()), ShouldEqual, `
   *
  ***
 *****
*******
   |
`)
		})
		Convey("size=3", func() {
			sapin := NewSapin(3)
			So(fmt.Sprintf("\n%s", sapin.String()), ShouldEqual, `
          *
         ***
        *****
       *******
        *****
       *******
      *********
     ***********
    *************
     ***********
    *************
   ***************
  *****************
 *******************
*********************
         |||
         |||
         |||
`)
		})
		Convey("size=10", func() {
			sapin := NewSapin(10)
			So(fmt.Sprintf("\n%s", sapin.String()), ShouldEqual, `
                                                  *
                                                 ***
                                                *****
                                               *******
                                                *****
                                               *******
                                              *********
                                             ***********
                                            *************
                                             ***********
                                            *************
                                           ***************
                                          *****************
                                         *******************
                                        *********************
                                          *****************
                                         *******************
                                        *********************
                                       ***********************
                                      *************************
                                     ***************************
                                    *****************************
                                      *************************
                                     ***************************
                                    *****************************
                                   *******************************
                                  *********************************
                                 ***********************************
                                *************************************
                               ***************************************
                                  *********************************
                                 ***********************************
                                *************************************
                               ***************************************
                              *****************************************
                             *******************************************
                            *********************************************
                           ***********************************************
                          *************************************************
                             *******************************************
                            *********************************************
                           ***********************************************
                          *************************************************
                         ***************************************************
                        *****************************************************
                       *******************************************************
                      *********************************************************
                     ***********************************************************
                    *************************************************************
                        *****************************************************
                       *******************************************************
                      *********************************************************
                     ***********************************************************
                    *************************************************************
                   ***************************************************************
                  *****************************************************************
                 *******************************************************************
                *********************************************************************
               ***********************************************************************
              *************************************************************************
                  *****************************************************************
                 *******************************************************************
                *********************************************************************
               ***********************************************************************
              *************************************************************************
             ***************************************************************************
            *****************************************************************************
           *******************************************************************************
          *********************************************************************************
         ***********************************************************************************
        *************************************************************************************
       ***************************************************************************************
            *****************************************************************************
           *******************************************************************************
          *********************************************************************************
         ***********************************************************************************
        *************************************************************************************
       ***************************************************************************************
      *****************************************************************************************
     *******************************************************************************************
    *********************************************************************************************
   ***********************************************************************************************
  *************************************************************************************************
 ***************************************************************************************************
*****************************************************************************************************
                                             |||||||||||
                                             |||||||||||
                                             |||||||||||
                                             |||||||||||
                                             |||||||||||
                                             |||||||||||
                                             |||||||||||
                                             |||||||||||
                                             |||||||||||
                                             |||||||||||
`)
		})
		Convey("size=0", func() {
			sapin := NewSapin(0)
			So(sapin.String(), ShouldBeEmpty)
		})
		Convey("size=-1", func() {
			sapin := NewSapin(-1)
			So(sapin.String(), ShouldBeEmpty)
		})
	})
}
